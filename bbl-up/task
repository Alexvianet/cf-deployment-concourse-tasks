#!/bin/bash -xeu

# shellcheck disable=SC1091
source cf-deployment-concourse-tasks/shared-functions

function check_fast_fails() {
  set +x

  if [ "${IS_BOSH_LITE}" == "true" ]; then
    if [ "${BBL_IAAS}" != "gcp" ]; then
      echo "\$IS_BOSH_LITE requires \$BBL_IAAS to be set to 'gcp'"
      exit 1
    fi
  else
    if [ -z "${LB_DOMAIN}" ]; then
      echo "\$LB_DOMAIN is a required parameter.  Please set the domain."
      exit 1
    fi

    if [ -z "${BBL_LB_CERT}"  ]; then
      echo "\$BBL_LB_CERT is a required parameter"
      exit 1
    fi

    if [ -z "${BBL_LB_KEY}"  ]; then
      echo "\$BBL_LB_KEY is a required parameter"
      exit 1
    fi
  fi

  set -x
}

function commit_bbl_state_dir {
  local root_dir
  root_dir="${1}"

  pushd "${root_dir}/bbl-state/${BBL_STATE_DIR}"
    if [[ -n $(git status --porcelain) ]]; then
      set_git_config
      git add .
      git commit -m "Update bbl state dir"
    fi
  popd

  pushd "${root_dir}"
    shopt -s dotglob
    cp -R bbl-state/* updated-bbl-state/
  popd
}

function write_bbl_certs() {
  set +x
  if [ -f "${BBL_LB_CERT}" ]; then
    bbl_cert_path="${BBL_LB_CERT}"
  else
    echo "${BBL_LB_CERT}" > /tmp/bbl-cert
    bbl_cert_path="/tmp/bbl-cert"
  fi
  if [ -f "${BBL_LB_CERT_CHAIN}" ]; then
    bbl_cert_chain_flag="--chain=${BBL_LB_CERT_CHAIN}"
  elif [ ! -z "${BBL_LB_CERT_CHAIN// }" ]; then
    echo "${BBL_LB_CERT_CHAIN}" > /tmp/bbl-cert-chain
    bbl_cert_chain_flag="--chain=/tmp/bbl-cert-chain"
  fi
  if [ -f "${BBL_LB_KEY}" ]; then
    bbl_key_path="${BBL_LB_KEY}"
  else
    echo "${BBL_LB_KEY}" > /tmp/bbl-key
    bbl_key_path="/tmp/bbl-key"
  fi
  set -x
}

function write_service_account_key() {
  set +x
  if [ ! -f "${BBL_GCP_SERVICE_ACCOUNT_KEY}" ]; then
    echo "${BBL_GCP_SERVICE_ACCOUNT_KEY}" > /tmp/google_service_account.json
    export BBL_GCP_SERVICE_ACCOUNT_KEY="/tmp/google_service_account.json"
  fi
  set -x
}

function make_concatenated_operations_file() {
  local root_dir
  root_dir="${1}"

  pushd "${root_dir}/ops-files"
    cat $OPS_FILES | grep -v "\-\-\-" > concatenated-operations.yml
  popd
}

function main() {
  local root_dir
  root_dir="${1}"

  check_fast_fails

  local ops_arguments
  ops_arguments=""

  if [ -n "${OPS_FILES}" ]; then
    make_concatenated_operations_file ${root_dir}
    ops_arguments="--ops-file ${root_dir}/ops-files/concatenated-operations.yml"
  fi

  mkdir -p "bbl-state/${BBL_STATE_DIR}"
  pushd "bbl-state/${BBL_STATE_DIR}"
    if [ "${IS_BOSH_LITE}" != "true" ]; then
      local bbl_cert_chain_flag
      bbl_cert_chain_flag=""
      local bbl_cert_path
      local bbl_cert_key
      write_bbl_certs
    fi

    bbl version

    local name_flag
    name_flag=""

    if [ -n "${BBL_ENV_NAME}" -a ! -f bbl-state.json ]; then
      name_flag="--name ${BBL_ENV_NAME}"
    fi

    if [ "${BBL_IAAS}" == "gcp" ]; then
      write_service_account_key
    fi

    bbl plan ${name_flag} ${ops_arguments} ${BBL_EXTRA_FLAGS} > "${root_dir}/bbl_plan.txt"

    if [ "${IS_BOSH_LITE}" == "true" ]; then
      cp -r /var/repos/bosh-bootloader/plan-patches/bosh-lite-gcp/* .
    fi

    bbl --debug up > "${root_dir}/bbl_up.txt"

    if [ "${IS_BOSH_LITE}" != "true" ]; then
      local domain_flag
      domain_flag="--domain=${LB_DOMAIN}"

      # The two commands below amount to "create or update"
      bbl \
        --debug \
        create-lbs \
        --type=cf \
        --cert="${bbl_cert_path}" \
        ${bbl_cert_chain_flag} \
        --key="${bbl_key_path}" \
        ${domain_flag} > "${root_dir}/bbl_create_lbs.txt"
    fi
  popd
}

trap "commit_bbl_state_dir ${PWD}" EXIT

main ${PWD}

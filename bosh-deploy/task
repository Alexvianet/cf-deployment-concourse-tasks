#!/bin/bash -eux

function check_input_params() {
  set +x
  : ${TARGET_FILE?}
  : ${USERNAME_FILE?}
  : ${PASSWORD_FILE?}
  : ${CA_CERT_FILE?}
  : ${MANIFEST_FILE?}
  : ${DEPLOYMENT_VARS_STORE?}
  : ${SYSTEM_DOMAIN?}
  : ${OPS_FILES?}
  set -x
}

function commit_vars_store {
  pushd manifest-properties
    if [[ -n $(git status --porcelain) ]]; then
      git config user.name "CF MEGA BOT"
      git config user.email "cf-mega@pivotal.io"
      git add .
      git commit -m "Update vars store"
    fi
  popd

  shopt -s dotglob
  cp -R manifest-properties/* updated-vars-store/
}

function check_unmodified_addresses() {
  set +x
  local interpolated_manifest
  interpolated_manifest="${1}"

  local unmodified_addresses
  set +e
  unmodified_addresses=$(cat "${interpolated_manifest}" | grep -E '10\.0\.31\.190|10\.0\.47\.190|10\.0\.63\.190|10\.0\.31\.191|10\.0\.47\.191|10\.0\.31\.193')
  set -e

  if [ -n "${unmodified_addresses}" ]; then
    echo "Here are all the unmodified static IP addresses left in this manifest after applying all bosh operations:"
    echo "${unmodified_addresses}"
  fi
  set -x
}

function setup_bosh_env_vars() {
  set +x
  export BOSH_PASSWORD=$(cat "password/${PASSWORD_FILE}")
  export BOSH_USER=$(cat username/"${USERNAME_FILE}")
  set -x
}

function bosh_deploy() {
  local bosh_target
  bosh_target=$(cat "target/${TARGET_FILE}")

  local bosh_manifest
  bosh_manifest="manifest/${MANIFEST_FILE}"

  local bosh_ca_cert
  bosh_ca_cert="ca-cert/${CA_CERT_FILE}"

  local deployment_name
  deployment_name=$(grep -E "^name:" "$bosh_manifest" | awk '{print $2}')

  local arguments
  arguments="--vars-store manifest-properties/${DEPLOYMENT_VARS_STORE} -v system_domain=${SYSTEM_DOMAIN}"

  for op in ${OPS_FILES}
  do
    arguments="${arguments} -o manifest/${op}"
  done

  local interpolated_manifest
  interpolated_manifest=$(mktemp)

  bosh -n interpolate ${arguments} --var-errs "${bosh_manifest}" > "${interpolated_manifest}"

  check_unmodified_addresses "${interpolated_manifest}"

  bosh \
    -n \
    -d "${deployment_name}" \
    -e "${bosh_target}" \
    --ca-cert="${bosh_ca_cert}" \
    deploy \
    "${interpolated_manifest}"
}

function main() {
  check_input_params
  setup_bosh_env_vars
  bosh_deploy
  commit_vars_store
}

main
